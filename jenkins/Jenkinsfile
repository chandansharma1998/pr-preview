pipeline {
    agent any

    environment {
        DOCKERHUB_USER = 'sharmachandan487'
        DOCKER_IMAGE   = "${DOCKERHUB_USER}/pr-preview-app"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build & Push Image') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub-creds',
                    usernameVariable: 'DOCKERHUB_USER',
                    passwordVariable: 'DOCKERHUB_PASS'
                )]) {
                    powershell """
                        echo "Logging in to DockerHub..."
                        docker login -u $env:DOCKERHUB_USER -p $env:DOCKERHUB_PASS

                        echo "Building image..."
                        docker build -t $env:DOCKER_IMAGE:pr-$env:CHANGE_ID ./app

                        echo "Pushing image..."
                        docker push $env:DOCKER_IMAGE:pr-$env:CHANGE_ID
                    """
                }
            }
        }

        stage('Deploy with Helm') {
            steps {
                powershell """
                    $pr = $env:CHANGE_ID
                    $minikubeIp = (minikube ip)

                    echo "Creating namespace pr-$pr if not exists..."
                    kubectl create namespace pr-$pr --dry-run=client -o yaml | kubectl apply -f -

                    echo "Deploying with Helm..."
                    helm upgrade --install pr-$pr ./helm-chart `
                        --namespace pr-$pr `
                        --set image.repository=$env:DOCKER_IMAGE `
                        --set image.tag=pr-$pr `
                        --set prNumber=$pr `
                        --set minikubeIp=$minikubeIp
                """
            }
        }

        stage('Verify Deployment') {
            steps {
                powershell """
                    $pr = $env:CHANGE_ID
                    kubectl get pods -n pr-$pr
                    kubectl get ingress -n pr-$pr
                """
            }
        }
    }

    post {
        success {
            echo "PR Preview deployed successfully! ðŸŽ‰"
            echo "Visit: http://pr-${env.CHANGE_ID}.`minikube ip`.nip.io/"
        }
        failure {
            echo "Deployment failed. Check logs."
        }
    }
}
