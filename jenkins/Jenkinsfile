pipeline {
    agent any

    environment {
        DOCKERHUB_USER = 'sharmachandan487'
        DOCKER_IMAGE   = "${DOCKERHUB_USER}/pr-preview-app"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build & Push Image') {
          steps {
              script {
                  def prId = env.CHANGE_ID ?: "local"
                  def image = "${env.DOCKERHUB_USER}/pr-preview-app:pr-${prId}"

                  withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', 
                                                    usernameVariable: 'DOCKERHUB_USER', 
                                                    passwordVariable: 'DOCKERHUB_PASS')]) {
                      bat """
                          docker --version
                          echo Logging in to DockerHub...
                          echo %DOCKERHUB_PASS% | docker login -u %DOCKERHUB_USER% --password-stdin
                          echo Building image: ${image}
                          docker build -t ${image} app
                          echo Pushing image: ${image}
                          docker push ${image}
                      """
                  }
              }
          }
        }

        stage('Deploy with Helm') {
          steps {
              bat """
                  set NAMESPACE=pr-%CHANGE_ID%
                  for /f %%i in ('minikube ip') do set MINIKUBE_IP=%%i

                  kubectl create namespace %NAMESPACE% --dry-run=client -o yaml | kubectl apply -f -

                  helm upgrade --install pr-%CHANGE_ID% ./helm-chart ^
                    --namespace %NAMESPACE% ^
                    --set image.repository=${DOCKERHUB_USER}/pr-preview-app ^
                    --set image.tag=latest ^
                    --set image.pullPolicy=Always ^
                    --set prNumber=%CHANGE_ID% ^
                    --set minikubeIp=%MINIKUBE_IP%
              """
          }
        }


        stage('Verify Deployment') {
            steps {
                powershell """
                    $pr = $env:CHANGE_ID
                    kubectl get pods -n pr-$pr
                    kubectl get ingress -n pr-$pr
                """
            }
        }
    }

    post {
        success {
            echo "PR Preview deployed successfully! ðŸŽ‰"
            echo "Visit: http://pr-${env.CHANGE_ID}.`minikube ip`.nip.io/"
        }
        failure {
            echo "Deployment failed. Check logs."
        }
    }
}
